#!/usr/bin/env tclsh
package require tcltest
namespace import ::tcltest::*
source ../lib/crossed-wires.tcl

# part 1
test wire-1.1 "grid points of a wire" -body {
    wires::path R8,U5,L5,D3
} -returnCodes ok -result {{1 0} {2 0} {3 0} {4 0} {5 0} {6 0} {7 0} {8 0} {8 1} {8 2} {8 3} {8 4} {8 5} {7 5} {6 5} {5 5} {4 5} {3 5} {3 4} {3 3} {3 2}}

test wire-1.2 "grid points of another wire" -body {
    wires::path U7,R6,D4,L4
} -returnCodes ok -result {{0 1} {0 2} {0 3} {0 4} {0 5} {0 6} {0 7} {1 7} {2 7} {3 7} {4 7} {5 7} {6 7} {6 6} {6 5} {6 4} {6 3} {5 3} {4 3} {3 3} {2 3}}

test wire-2.1 "intersection points of two wires" -body {
    set wire1 R8,U5,L5,D3
    set wire2 U7,R6,D4,L4
    wires::intersection [wires::path $wire1] [wires::path $wire2]
} -returnCodes ok -result {{6 5} {3 3}}

test wire-3.1 "distance top-right" -body {
    wires::distance {3 3}
} -returnCodes ok -result 6

test wire-3.2 "distance top-left" -body {
    wires::distance {-3 3}
} -returnCodes ok -result 6

test wire-3.3 "distance bottom-left" -body {
    wires::distance {-3 -3}
} -returnCodes ok -result 6

test wire-3.4 "distance bottom-right" -body {
    wires::distance {3 -3}
} -returnCodes ok -result 6

test wire-4.1 "short wires" -body {
    set wire1 R8,U5,L5,D3
    set wire2 U7,R6,D4,L4
    wires::manhattanDistance $wire1 $wire2
} -returnCodes ok -result 6

test wire-4.2 "longer wires" -body {
    set wire1 R75,D30,R83,U83,L12,D49,R71,U7,L72
    set wire2 U62,R66,U55,R34,D71,R55,D58,R83
    wires::manhattanDistance $wire1 $wire2
} -returnCodes ok -result 159

test wire-4.3 "even longer wires" -body {
    set wire1 R98,U47,R26,D63,R33,U87,L62,D20,R33,U53,R51
    set wire2 U98,R91,D20,R16,D67,R40,U7,R15,U6,R7
    wires::manhattanDistance $wire1 $wire2
} -returnCodes ok -result 135

# part 2
test wire-5.1 "steps to intersection 1" -body {
    wires::stepsTo [wires::path R8,U5,L5,D3] {3 3}
} -returnCodes ok -result 20

test wire-5.2 "steps to intersection 2" -body {
    wires::stepsTo [wires::path U7,R6,D4,L4] {3 3}
} -returnCodes ok -result 20

test wire-5.3 "steps to intersection 3" -body {
    wires::stepsTo [wires::path R8,U5,L5,D3] {6 5}
} -returnCodes ok -result 15

test wire-5.4 "steps to intersection 4" -body {
    wires::stepsTo [wires::path U7,R6,D4,L4] {6 5}
} -returnCodes ok -result 15

test wire-6.1 "minimum signal delay short wires" -body {
    set wire1 R8,U5,L5,D3
    set wire2 U7,R6,D4,L4
    wires::minimumSignalDelay $wire1 $wire2
} -returnCodes ok -result 30

test wire-4.2 "minimum signal delay longer wires" -body {
    set wire1 R75,D30,R83,U83,L12,D49,R71,U7,L72
    set wire2 U62,R66,U55,R34,D71,R55,D58,R83
    wires::minimumSignalDelay $wire1 $wire2
} -returnCodes ok -result 610

test wire-4.3 "minimum signal delay even longer wires" -body {
    set wire1 R98,U47,R26,D63,R33,U87,L62,D20,R33,U53,R51
    set wire2 U98,R91,D20,R16,D67,R40,U7,R15,U6,R7
    wires::minimumSignalDelay $wire1 $wire2
} -returnCodes ok -result 410


cleanupTests
