#!/usr/bin/env tclsh
package require tcltest
namespace import ::tcltest::*
set scriptDir [file dirname [info script]]
lappend auto_path [file join $scriptDir .. lib]
package require asteroidMonitoring


# part 1
test am-1.1 "small grid" -body {
    set map [join { .#..# ..... ##### ....# ...## } \n]
    set mon [AsteroidMonitoring new $map]
    $mon asteroids
} -returnCodes ok -result {{1 0} {4 0} {0 2} {1 2} {2 2} {3 2} {4 2} {4 3} {3 4} {4 4}}

test am-1.2 "num seen from (0,2)" -body {
    set map [join { .#..# ..... ##### ....# ...## } \n]
    set mon [AsteroidMonitoring new $map]
    $mon base 0 2
    $mon seen
} -returnCodes ok -result 6

test am-1.3 "num seen from (3,4)" -body {
    set map [join { .#..# ..... ##### ....# ...## } \n]
    set mon [AsteroidMonitoring new $map]
    $mon base 3 4
    $mon seen
} -returnCodes ok -result 8

test am-1.4 "best location" -body {
    set map [join { .#..# ..... ##### ....# ...## } \n]
    set mon [AsteroidMonitoring new $map]
    set best [$mon bestLocation]
    $mon base {*}$best
    list $best [$mon seen]
} -returnCodes ok -result {{3 4} 8}

test am-1.5 "2nd example map" -body {
    set map [string trim {
......#.#.
#..#.#....
..#######.
.#.#.###..
.#..#.....
..#....#.#
#..#....#.
.##.#..###
##...#..#.
.#....####
    }]
    set mon [AsteroidMonitoring new $map]
    set best [$mon bestLocation]
    $mon base {*}$best
    list $best [$mon seen]
} -returnCodes ok -result {{5 8} 33}

test am-1.6 "3rd example map" -body {
    set map [string trim {
#.#...#.#.
.###....#.
.#....#...
##.#.#.#.#
....#.#.#.
.##..###.#
..#...##..
..##....##
......#...
.####.###.
    }]
    set mon [AsteroidMonitoring new $map]
    set best [$mon bestLocation]
    $mon base {*}$best
    list $best [$mon seen]
} -returnCodes ok -result {{1 2} 35}

test am-1.7 "4th example map" -body {
    set map [string trim {
.#..#..###
####.###.#
....###.#.
..###.##.#
##.##.#.#.
....###..#
..#.#..#.#
#..#.#.###
.##...##.#
.....#.#..
    }]
    set mon [AsteroidMonitoring new $map]
    set best [$mon bestLocation]
    $mon base {*}$best
    list $best [$mon seen]
} -returnCodes ok -result {{6 3} 41}

test am-1.8 "5th example map" -body {
    set map [string trim {
.#..##.###...#######
##.############..##.
.#.######.########.#
.###.#######.####.#.
#####.##.#.##.###.##
..#####..#.#########
####################
#.####....###.#.#.##
##.#################
#####.##.###..####..
..######..##.#######
####.##.####...##..#
.#####..#.######.###
##...#.##########...
#.##########.#######
.####.#.###.###.#.##
....##.##.###..#####
.#.#.###########.###
#.#.#.#####.####.###
###.##.####.##.#..##
    }]
    set mon [AsteroidMonitoring new $map]
    set best [$mon bestLocation]
    $mon base {*}$best
    list $best [$mon seen]
} -returnCodes ok -result {{11 13} 210}


# part 2


test am-2.1 "1st varporizing" -body {
    set map [string trim {
.#....#####...#..
##...##.#####..##
##...#...#.#####.
..#.....X...###..
..#.#.....#....##
    }]
    set mon [AsteroidMonitoring new $map]
    $mon base 8 3
    set vaporized [$mon vaporize]
    list \
        [lrange $vaporized 0 8] \
        [lrange $vaporized 9 17] \
        [lrange $vaporized 18 26] \
        [lrange $vaporized 27 35]
        
} -returnCodes ok -result [list \
    {{8 1} {9 0} {9 1} {10 0} {9 2} {11 1} {12 1} {11 2} {15 1}} \
    {{12 2} {13 2} {14 2} {15 2} {12 3} {16 4} {15 4} {10 4} {4 4}} \
    {{2 4} {2 3} {0 2} {1 2} {0 1} {1 1} {5 2} {1 0} {5 1}} \
    {{6 1} {6 0} {7 0} {8 0} {10 1} {14 0} {16 1} {13 3} {14 3}} \
]

test am-2.2 "2nd vaporizing" -body {
    set map [string trim {
.#..##.###...#######
##.############..##.
.#.######.########.#
.###.#######.####.#.
#####.##.#.##.###.##
..#####..#.#########
####################
#.####....###.#.#.##
##.#################
#####.##.###..####..
..######..##.#######
####.##.####...##..#
.#####..#.######.###
##...#.##########...
#.##########.#######
.####.#.###.###.#.##
....##.##.###..#####
.#.#.###########.###
#.#.#.#####.####.###
###.##.####.##.#..##
    }]
    set mon [AsteroidMonitoring new $map]
    set best [$mon bestLocation]
    $mon base {*}$best
    set vaporized [$mon vaporize]
    foreach index {1 2 3 10 20 50 100 199 200 201 299} {
        lappend victim [lindex $vaporized $index-1]
    }
    set victim
} -returnCodes ok -result {{11 12} {12 1} {12 2} {12 8} {16 0} {16 9} {10 16} {9 6} {8 2} {10 9} {11 1}}


cleanupTests
